{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst selector = document.querySelector('#datetime-picker');\nconst btnStart = document.querySelector('[data-start]');\nbtnStart.setAttribute('disabled', true);\nlet userSelectedDates = 0;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDates = selectedDates[0];\n    const currentDate = new Date();\n    if (userSelectedDates < currentDate) {\n      iziToast.error({\n        color: 'red',\n        message: 'Please choose a date in the future.',\n        position: 'topRight',\n      });\n      btnStart.setAttribute('disabled', true);\n    } else {\n      btnStart.removeAttribute('disabled');\n    }\n  },\n};\nflatpickr(selector, options);\n\nbtnStart.addEventListener('click', startTimer);\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction startTimer() {\n  btnStart.setAttribute('disabled', true);\n  selector.setAttribute('disabled', true);\n  let msDifference = userSelectedDates - new Date();\n  const intervalId = setInterval(() => {\n    let { days, hours, minutes, seconds } = convertMs(msDifference);\n    document.querySelector('[data-days]').textContent = addZeroOnStart(days);\n    document.querySelector('[data-hours]').textContent = addZeroOnStart(hours);\n    document.querySelector('[data-minutes]').textContent =\n      addZeroOnStart(minutes);\n    document.querySelector('[data-seconds]').textContent =\n      addZeroOnStart(seconds);\n    if (days === 0 && hours === 0 && minutes === 0 && seconds === 0) {\n      clearInterval(intervalId);\n      btnStart.removeAttribute('disabled');\n      selector.removeAttribute('disabled');\n    }\n    msDifference -= 1000;\n  }, 1000);\n}\nfunction addZeroOnStart(value) {\n  return value < 10 ? '0' + value : value;\n}\n"],"names":["selector","btnStart","userSelectedDates","options","selectedDates","iziToast","flatpickr","startTimer","convertMs","ms","days","hours","minutes","seconds","msDifference","intervalId","addZeroOnStart","value"],"mappings":"+IAKA,MAAMA,EAAW,SAAS,cAAc,kBAAkB,EACpDC,EAAW,SAAS,cAAc,cAAc,EACtDA,EAAS,aAAa,WAAY,EAAI,EACtC,IAAIC,EAAoB,EAExB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBF,EAAoBE,EAAc,CAAC,EAE/BF,EADgB,IAAI,MAEtBG,EAAS,MAAM,CACb,MAAO,MACP,QAAS,sCACT,SAAU,UAClB,CAAO,EACDJ,EAAS,aAAa,WAAY,EAAI,GAEtCA,EAAS,gBAAgB,UAAU,CAEtC,CACH,EACAK,EAAUN,EAAUG,CAAO,EAE3BF,EAAS,iBAAiB,QAASM,CAAU,EAE7C,SAASC,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASN,GAAa,CACpBN,EAAS,aAAa,WAAY,EAAI,EACtCD,EAAS,aAAa,WAAY,EAAI,EACtC,IAAIc,EAAeZ,EAAoB,IAAI,KAC3C,MAAMa,EAAa,YAAY,IAAM,CACnC,GAAI,CAAE,KAAAL,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUM,CAAY,EAC9D,SAAS,cAAc,aAAa,EAAE,YAAcE,EAAeN,CAAI,EACvE,SAAS,cAAc,cAAc,EAAE,YAAcM,EAAeL,CAAK,EACzE,SAAS,cAAc,gBAAgB,EAAE,YACvCK,EAAeJ,CAAO,EACxB,SAAS,cAAc,gBAAgB,EAAE,YACvCI,EAAeH,CAAO,EACpBH,IAAS,GAAKC,IAAU,GAAKC,IAAY,GAAKC,IAAY,IAC5D,cAAcE,CAAU,EACxBd,EAAS,gBAAgB,UAAU,EACnCD,EAAS,gBAAgB,UAAU,GAErCc,GAAgB,GACjB,EAAE,GAAI,CACT,CACA,SAASE,EAAeC,EAAO,CAC7B,OAAOA,EAAQ,GAAK,IAAMA,EAAQA,CACpC"}